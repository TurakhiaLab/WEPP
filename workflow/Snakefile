# Load default config from ./config/config.yaml
configfile: "./config/config.yaml"

include: "rules/qc.smk"
include: "rules/freyja.smk"
include: "rules/preprocess.smk"
include: "rules/sam2pb.smk"
include: "rules/filter.smk"
include: "rules/dashboard.smk"

DIR = config.get("DIR")
FILE_PREFIX = config.get("FILE_PREFIX")

# Extract rules from command-line arguments
requested_rules = set()
for arg in sys.argv[1:]:
    if not arg.startswith("-"):
        requested_rules.add(arg)

if "test" not in requested_rules:
    if not DIR or not FILE_PREFIX:
        raise ValueError("Please provide DIR and FILE_PREFIX in --config argument")
    
    print(f"""\n\n
DIR={DIR}, FILE_PREFIX={FILE_PREFIX}
TREE={config.get("TREE")}
REF={config.get("REF")}
SEQUENCING_TYPE={config.get("SEQUENCING_TYPE")}
PRIMER_BED={config.get("PRIMER_BED")}
MIN_AF={config.get("MIN_AF")}
MIN_DEPTH={config.get("MIN_DEPTH")}
MIN_Q={config.get("MIN_Q")}
MAX_READS={config.get("MAX_READS")}
CLADE_LIST={config.get("CLADE_LIST")}
CLADE_IDX={config.get("CLADE_IDX")}
DASHBOARD_ENABLED={config.get("DASHBOARD_ENABLED")}
TAXONIUM_FILE={config.get("TAXONIUM_FILE")}
            \n\n""")

rule all:
    input:
        f"results/{DIR}/{FILE_PREFIX}_run.txt"
    params:
        dashboard=config.get("DASHBOARD_ENABLED", "false"),
    shell:
        """
        if [ "{params.dashboard}" = "True" ]; then
            if ss -tuln | grep -w '80' > /dev/null; then
                echo "ðŸŽ‰ Workflow completed! Dashboard is running at http://localhost:80 (or your forwarded host port).\n"
            fi
        else
            echo "Workflow completed! To run the dashboard. set DASHBOARD_ENABLED=True and rerun the workflow with --forcerun dashboard_serve \n"
        fi
        """
rule test:
    input:
        "build/wepp"
    shell:
        "./{input} help"